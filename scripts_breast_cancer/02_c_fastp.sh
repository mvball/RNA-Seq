#!/bin/bash
#SBATCH --array=1-12
#SBATCH --time=02:10:00
#SBATCH --mem=2g
#SBATCH --cpus-per-task=2
#SBATCH --job-name=fastp
#SBATCH --output=/data/users/mschlaepfer/rnaseq_course/log/fastpcorrectionc%A_%a.out
#SBATCH --error=/data/users/mschlaepfer/rnaseq_course/log/fastpcorrectionc%A_%a.err
#SBATCH --partition=pibu_el8
#SBATCH --mail-user=marina.schlaepferrubio@students.unibe.ch
#SBATCH --mail-type=END,FAIL

# Define variables
WORKDIR="/data/users/${USER}/rnaseq_course"
OUTDIR="$WORKDIR/FASTP_RESULTS"
SAMPLELIST="$WORKDIR/FASTQ_files/samplelist/sample_list.txt"

# Create the output directory if it doesn't already exist
mkdir -p "$OUTDIR"

# Extract sample information for the current array task
SAMPLE=$(awk -v line=$SLURM_ARRAY_TASK_ID 'NR==line {print $1; exit}' "$SAMPLELIST")
READ1=$(awk -v line=$SLURM_ARRAY_TASK_ID 'NR==line {print $2; exit}' "$SAMPLELIST")
READ2=$(awk -v line=$SLURM_ARRAY_TASK_ID 'NR==line {print $3; exit}' "$SAMPLELIST")

# Define output file paths
CLEAN_READ1="$OUTDIR/${SAMPLE}_clean_R1.fastq.gz"
CLEAN_READ2="$OUTDIR/${SAMPLE}_clean_R2.fastq.gz"
HTML_REPORT="$OUTDIR/${SAMPLE}_fastp.html"
JSON_REPORT="$OUTDIR/${SAMPLE}_fastp.json"

# Define the path to the Apptainer container
APPTAINER_PATH="/containers/apptainer/fastp_0.23.2--h5f740d0_3.sif"  # Adjust path if needed

# Run fastp for trimming and filtering inside the Apptainer container
apptainer exec --bind /data "$APPTAINER_PATH" fastp \
    -i "$READ1" \
    -I "$READ2" \
    -o "$CLEAN_READ1" \
    -O "$CLEAN_READ2" \
    -h "$HTML_REPORT" \
    -j "$JSON_REPORT" \
    -w 2


#-   i "$READ1": Specifies the input file for Read 1 (forward reads).
#   -I "$READ2": Specifies the input file for Read 2 (reverse reads).
#   -o "$CLEAN_READ1": Specifies the output file path for the cleaned version of Read 1.
#   -O "$CLEAN_READ2": Specifies the output file path for the cleaned version of Read 2.
#   -h "$HTML_REPORT": Specifies the path for an HTML summary report generated by fastp. This report includes visualizations of read quality, GC content, duplication rates, etc.
#   -j "$JSON_REPORT": Specifies the path for a JSON-format report with detailed statistics and metrics about the trimming and filtering process.
#   -w 2: Sets the number of threads (2) for parallel processing. This speeds up processing by utilizing multiple CPU cores, as specified in the #SBATCH --cpus-per-task=2 line.
